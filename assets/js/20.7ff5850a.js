(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{458:function(t,a,s){"use strict";s.r(a);var r=s(29),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),s("p",[t._v("数组是最基本的数据结构之一")]),t._v(" "),s("h2",{attrs:{id:"操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作"}},[t._v("#")]),t._v(" 操作")]),t._v(" "),s("h4",{attrs:{id:"读取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#读取"}},[t._v("#")]),t._v(" 读取")]),t._v(" "),s("p",[t._v("直接根据索引读取对应的值，时间复杂度就是 "),s("em",[s("strong",[t._v("O(1)")])])]),t._v(" "),s("h4",{attrs:{id:"查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查找"}},[t._v("#")]),t._v(" 查找")]),t._v(" "),s("p",[t._v("查询具体的值需要从索引0开始一个一个遍历比对，最长的步数是数组的长度，就是N，时间复杂度就是 "),s("em",[s("strong",[t._v("O(N)")])])]),t._v(" "),s("h4",{attrs:{id:"插入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插入"}},[t._v("#")]),t._v(" 插入")]),t._v(" "),s("p",[t._v("插入的索引后面的数值需要往后移一步，需要步数就是 "),s("em",[s("strong",[t._v("N-索引 + 1")])]),t._v("，需要的步数是集合的长度 "),s("em",[s("strong",[t._v("N-索引 + 2")])]),t._v("，时间复杂度就是 "),s("em",[s("strong",[t._v("O(N)")])])]),t._v(" "),s("h4",{attrs:{id:"删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[t._v("#")]),t._v(" 删除")]),t._v(" "),s("p",[t._v("删除具体索引的数值，后面的数值都要往前移一步，时间复杂度就是 "),s("em",[s("strong",[t._v("O(N)")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);